name: Deploy


on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    
    # create application.properties
    - name: create application.properties
      run: |
        mkdir ./src/main/resources
        cd ./src/main/resources
        touch ./application.properties
        echo "${{ secrets.APPLICATION_FILE }}" > ./application.properties
        mkdir ./firebase
      shell: bash

    # create JSON file
    - name : create-json
      id: create-json
      uses: jsdaniell/create-json@v1.2.2
      with:
        name: "peace-watcher-firebase-adminsdk-h2ae7-8d4a545043.json"
        json: ${{ secrets.FIREBASE_FILE }}
        dir: 'src/main/resources/firebase/'

   
    # grant permisson
    - name: Grant permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle Wrapper
      run: ./gradlew build -x test

    # Docker
    - name: Docker hub login
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Docker image build
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/peacewatcher-docker .
      
    - name: Docker Hub push
      run: docker push ${{ secrets.DOCKER_USERNAME }}/peacewatcher-docker

    # Deploy
    - name: Deploy to Instance
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}    #EC2 HOST
        username: ${{ secrets.USERNAME }}    #AWS_USERNAME
        key: ${{ secrets.SSH_KEY }}    #AWS PEM KEY
        script: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker pull ${{ secrets.DOCKER_USERNAME }}/peacewatcher-docker
          docker stop $(docker ps -qa)
          docker run -d -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/peacewatcher-docker
          docker rm $(docker ps --filter 'status=exited' -qa)
          docker image prune -f
